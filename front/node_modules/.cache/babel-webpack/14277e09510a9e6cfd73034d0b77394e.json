{"ast":null,"code":"import { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"../../components/header/header.component\";\nimport * as i3 from \"../../components/question-form/question-form.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../components/question-card/question-card.component\";\n\nfunction HomeComponent_div_10_question_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"question-card\", 10);\n  }\n\n  if (rf & 2) {\n    const question_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"creationDate\", question_r3.createdAt);\n    i0.ɵɵpropertyInterpolate(\"accessLink\", question_r3.accessLink);\n    i0.ɵɵproperty(\"title\", question_r3.title)(\"content\", question_r3.body)(\"showLink\", true);\n  }\n}\n\nfunction HomeComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵtemplate(2, HomeComponent_div_10_question_card_2_Template, 1, 5, \"question-card\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const questions_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", questions_r1);\n  }\n}\n\nexport class HomeComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n\n  ngOnInit() {\n    this.startGetQuestionsRequest();\n  }\n\n  startGetQuestionsRequest() {\n    this.questions$ = this.apiService.getAllQuestions().pipe(tap(questions => console.log(questions)), map(questions => {\n      return questions.map(question => {\n        return Object.assign(Object.assign({}, question), {\n          accessLink: `/question/${question.id}`\n        });\n      }).reverse();\n    }), tap(console.log));\n  }\n\n  saveQuestion(event) {\n    this.apiService.saveNewQuestion(event).subscribe(() => {\n      alert('Pergunta salva!');\n      this.startGetQuestionsRequest();\n    });\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"container\", \"py-2\", \"home\"], [1, \"row\"], [1, \"col-12\", \"w-100\"], [3, \"send\"], [1, \"row\", \"mt-2\"], [1, \"col-12\"], [1, \"fw-normal\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-12\", \"d-flex\", \"flex-column\"], [\"class\", \"mt-4\", 3, \"title\", \"content\", \"creationDate\", \"accessLink\", \"showLink\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-4\", 3, \"title\", \"content\", \"creationDate\", \"accessLink\", \"showLink\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"question-form\", 3);\n      i0.ɵɵlistener(\"send\", function HomeComponent_Template_question_form_send_4_listener($event) {\n        return ctx.saveQuestion($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"h1\", 6);\n      i0.ɵɵtext(9, \"Outras Perguntas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, HomeComponent_div_10_Template, 3, 1, \"div\", 7);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(11, 1, ctx.questions$));\n    }\n  },\n  directives: [i2.HeaderComponent, i3.QuestionFormComponent, i4.NgIf, i4.NgForOf, i5.QuestionCardComponent],\n  pipes: [i4.AsyncPipe],\n  styles: [\".home[_ngcontent-%COMP%] {\\n  min-height: 100vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9tZSB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xufSJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\flavi\\Documents\\Projeto\\projeto-final-frontend-soulcode-main\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\flavi\\Documents\\Projeto\\projeto-final-frontend-soulcode-main\\src\\app\\pages\\home\\home.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Question } from 'src/app/models/question';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  questions$!: Observable<Question[]>\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.startGetQuestionsRequest()\n  }\n\n  startGetQuestionsRequest() {\n    this.questions$ = this.apiService.getAllQuestions()\n    .pipe(\n      tap((questions) => console.log(questions)),\n      map(questions => {\n        return questions.map(question => {\n          return { ...question, accessLink: `/question/${question.id}` }\n        }).reverse()\n      }),\n      tap(console.log)\n    )\n  }\n\n  saveQuestion(event: Question) {\n    this.apiService.saveNewQuestion(event).subscribe(() => {\n      alert('Pergunta salva!')\n      this.startGetQuestionsRequest()\n    })\n  }\n}\n","<app-header></app-header>\n<div class=\"container py-2 home\">\n  <div class=\"row\">\n    <div class=\"col-12 w-100\">\n      <question-form (send)=\"saveQuestion($event)\"></question-form>\n    </div>\n  </div>\n  <div class=\"row mt-2\">\n    <div class=\"col-12\">\n      <hr>\n      <h1 class=\"fw-normal\">Outras Perguntas</h1>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"questions$ | async as questions\">\n    <div class=\"col-12 d-flex flex-column\">\n      <question-card\n        *ngFor=\"let question of questions\"\n        class=\"mt-4\"\n        [title]=\"question.title\"\n        [content]=\"question.body\"\n        creationDate=\"{{question.createdAt}}\"\n        accessLink=\"{{question.accessLink}}\"\n        [showLink]=\"true\"\n      >\n      </question-card>\n    </div>\n  </div>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}